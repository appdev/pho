// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: proto/img_syncer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // YYYY:MM:DD
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxReturn int32  `protobuf:"varint,3,opt,name=maxReturn,proto3" json:"maxReturn,omitempty"`
}

func (x *ListByDateRequest) Reset() {
	*x = ListByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByDateRequest) ProtoMessage() {}

func (x *ListByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByDateRequest.ProtoReflect.Descriptor instead.
func (*ListByDateRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{0}
}

func (x *ListByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ListByDateRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListByDateRequest) GetMaxReturn() int32 {
	if x != nil {
		return x.MaxReturn
	}
	return 0
}

type ListByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Paths   []string `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ListByDateResponse) Reset() {
	*x = ListByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByDateResponse) ProtoMessage() {}

func (x *ListByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByDateResponse.ProtoReflect.Descriptor instead.
func (*ListByDateResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{1}
}

func (x *ListByDateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListByDateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListByDateResponse) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FilterNotUploadedRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Date string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Id   string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FilterNotUploadedRequestInfo) Reset() {
	*x = FilterNotUploadedRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterNotUploadedRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterNotUploadedRequestInfo) ProtoMessage() {}

func (x *FilterNotUploadedRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterNotUploadedRequestInfo.ProtoReflect.Descriptor instead.
func (*FilterNotUploadedRequestInfo) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{4}
}

func (x *FilterNotUploadedRequestInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterNotUploadedRequestInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *FilterNotUploadedRequestInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FilterNotUploadedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photos     []*FilterNotUploadedRequestInfo `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	IsFinished bool                            `protobuf:"varint,2,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
}

func (x *FilterNotUploadedRequest) Reset() {
	*x = FilterNotUploadedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterNotUploadedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterNotUploadedRequest) ProtoMessage() {}

func (x *FilterNotUploadedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterNotUploadedRequest.ProtoReflect.Descriptor instead.
func (*FilterNotUploadedRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{5}
}

func (x *FilterNotUploadedRequest) GetPhotos() []*FilterNotUploadedRequestInfo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *FilterNotUploadedRequest) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type FilterNotUploadedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NotUploaedIDs []string `protobuf:"bytes,3,rep,name=notUploaedIDs,proto3" json:"notUploaedIDs,omitempty"`
	IsFinished    bool     `protobuf:"varint,4,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
}

func (x *FilterNotUploadedResponse) Reset() {
	*x = FilterNotUploadedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterNotUploadedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterNotUploadedResponse) ProtoMessage() {}

func (x *FilterNotUploadedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterNotUploadedResponse.ProtoReflect.Descriptor instead.
func (*FilterNotUploadedResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{6}
}

func (x *FilterNotUploadedResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FilterNotUploadedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FilterNotUploadedResponse) GetNotUploaedIDs() []string {
	if x != nil {
		return x.NotUploaedIDs
	}
	return nil
}

func (x *FilterNotUploadedResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type SetDriveSMBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Share    string `protobuf:"bytes,4,opt,name=share,proto3" json:"share,omitempty"`
	Root     string `protobuf:"bytes,5,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *SetDriveSMBRequest) Reset() {
	*x = SetDriveSMBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveSMBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveSMBRequest) ProtoMessage() {}

func (x *SetDriveSMBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveSMBRequest.ProtoReflect.Descriptor instead.
func (*SetDriveSMBRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{7}
}

func (x *SetDriveSMBRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SetDriveSMBRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetDriveSMBRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetDriveSMBRequest) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *SetDriveSMBRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type SetDriveSMBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetDriveSMBResponse) Reset() {
	*x = SetDriveSMBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveSMBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveSMBResponse) ProtoMessage() {}

func (x *SetDriveSMBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveSMBResponse.ProtoReflect.Descriptor instead.
func (*SetDriveSMBResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{8}
}

func (x *SetDriveSMBResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDriveSMBResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListDriveSMBSharesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListDriveSMBSharesRequest) Reset() {
	*x = ListDriveSMBSharesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveSMBSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveSMBSharesRequest) ProtoMessage() {}

func (x *ListDriveSMBSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveSMBSharesRequest.ProtoReflect.Descriptor instead.
func (*ListDriveSMBSharesRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{9}
}

type ListDriveSMBSharesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Shares  []string `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
}

func (x *ListDriveSMBSharesResponse) Reset() {
	*x = ListDriveSMBSharesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveSMBSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveSMBSharesResponse) ProtoMessage() {}

func (x *ListDriveSMBSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveSMBSharesResponse.ProtoReflect.Descriptor instead.
func (*ListDriveSMBSharesResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{10}
}

func (x *ListDriveSMBSharesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDriveSMBSharesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListDriveSMBSharesResponse) GetShares() []string {
	if x != nil {
		return x.Shares
	}
	return nil
}

type ListDriveSMBDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Share string `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	Dir   string `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
}

func (x *ListDriveSMBDirRequest) Reset() {
	*x = ListDriveSMBDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveSMBDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveSMBDirRequest) ProtoMessage() {}

func (x *ListDriveSMBDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveSMBDirRequest.ProtoReflect.Descriptor instead.
func (*ListDriveSMBDirRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{11}
}

func (x *ListDriveSMBDirRequest) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *ListDriveSMBDirRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

type ListDriveSMBDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Dirs    []string `protobuf:"bytes,3,rep,name=dirs,proto3" json:"dirs,omitempty"`
}

func (x *ListDriveSMBDirResponse) Reset() {
	*x = ListDriveSMBDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveSMBDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveSMBDirResponse) ProtoMessage() {}

func (x *ListDriveSMBDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveSMBDirResponse.ProtoReflect.Descriptor instead.
func (*ListDriveSMBDirResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{12}
}

func (x *ListDriveSMBDirResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDriveSMBDirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListDriveSMBDirResponse) GetDirs() []string {
	if x != nil {
		return x.Dirs
	}
	return nil
}

type SetDriveSMBShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Share string `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	Root  string `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *SetDriveSMBShareRequest) Reset() {
	*x = SetDriveSMBShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveSMBShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveSMBShareRequest) ProtoMessage() {}

func (x *SetDriveSMBShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveSMBShareRequest.ProtoReflect.Descriptor instead.
func (*SetDriveSMBShareRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{13}
}

func (x *SetDriveSMBShareRequest) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *SetDriveSMBShareRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type SetDriveSMBShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetDriveSMBShareResponse) Reset() {
	*x = SetDriveSMBShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveSMBShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveSMBShareResponse) ProtoMessage() {}

func (x *SetDriveSMBShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveSMBShareResponse.ProtoReflect.Descriptor instead.
func (*SetDriveSMBShareResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{14}
}

func (x *SetDriveSMBShareResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDriveSMBShareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetDriveWebdavRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Root     string `protobuf:"bytes,4,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *SetDriveWebdavRequest) Reset() {
	*x = SetDriveWebdavRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveWebdavRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveWebdavRequest) ProtoMessage() {}

func (x *SetDriveWebdavRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveWebdavRequest.ProtoReflect.Descriptor instead.
func (*SetDriveWebdavRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{15}
}

func (x *SetDriveWebdavRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SetDriveWebdavRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetDriveWebdavRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetDriveWebdavRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type SetDriveWebdavResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetDriveWebdavResponse) Reset() {
	*x = SetDriveWebdavResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveWebdavResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveWebdavResponse) ProtoMessage() {}

func (x *SetDriveWebdavResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveWebdavResponse.ProtoReflect.Descriptor instead.
func (*SetDriveWebdavResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{16}
}

func (x *SetDriveWebdavResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDriveWebdavResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListDriveWebdavDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir string `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
}

func (x *ListDriveWebdavDirRequest) Reset() {
	*x = ListDriveWebdavDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveWebdavDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveWebdavDirRequest) ProtoMessage() {}

func (x *ListDriveWebdavDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveWebdavDirRequest.ProtoReflect.Descriptor instead.
func (*ListDriveWebdavDirRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{17}
}

func (x *ListDriveWebdavDirRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

type ListDriveWebdavDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Dirs    []string `protobuf:"bytes,3,rep,name=dirs,proto3" json:"dirs,omitempty"`
}

func (x *ListDriveWebdavDirResponse) Reset() {
	*x = ListDriveWebdavDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveWebdavDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveWebdavDirResponse) ProtoMessage() {}

func (x *ListDriveWebdavDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveWebdavDirResponse.ProtoReflect.Descriptor instead.
func (*ListDriveWebdavDirResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{18}
}

func (x *ListDriveWebdavDirResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDriveWebdavDirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListDriveWebdavDirResponse) GetDirs() []string {
	if x != nil {
		return x.Dirs
	}
	return nil
}

type SetDriveNFSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Root string `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *SetDriveNFSRequest) Reset() {
	*x = SetDriveNFSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveNFSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveNFSRequest) ProtoMessage() {}

func (x *SetDriveNFSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveNFSRequest.ProtoReflect.Descriptor instead.
func (*SetDriveNFSRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{19}
}

func (x *SetDriveNFSRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SetDriveNFSRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type SetDriveNFSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetDriveNFSResponse) Reset() {
	*x = SetDriveNFSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveNFSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveNFSResponse) ProtoMessage() {}

func (x *SetDriveNFSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveNFSResponse.ProtoReflect.Descriptor instead.
func (*SetDriveNFSResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{20}
}

func (x *SetDriveNFSResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDriveNFSResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListDriveNFSDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir string `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
}

func (x *ListDriveNFSDirRequest) Reset() {
	*x = ListDriveNFSDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveNFSDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveNFSDirRequest) ProtoMessage() {}

func (x *ListDriveNFSDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveNFSDirRequest.ProtoReflect.Descriptor instead.
func (*ListDriveNFSDirRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{21}
}

func (x *ListDriveNFSDirRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

type ListDriveNFSDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Dirs    []string `protobuf:"bytes,3,rep,name=dirs,proto3" json:"dirs,omitempty"`
}

func (x *ListDriveNFSDirResponse) Reset() {
	*x = ListDriveNFSDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDriveNFSDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDriveNFSDirResponse) ProtoMessage() {}

func (x *ListDriveNFSDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDriveNFSDirResponse.ProtoReflect.Descriptor instead.
func (*ListDriveNFSDirResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{22}
}

func (x *ListDriveNFSDirResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDriveNFSDirResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListDriveNFSDirResponse) GetDirs() []string {
	if x != nil {
		return x.Dirs
	}
	return nil
}

type SetDriveBaiduNetDiskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TmpDir       string `protobuf:"bytes,3,opt,name=tmpDir,proto3" json:"tmpDir,omitempty"`
}

func (x *SetDriveBaiduNetDiskRequest) Reset() {
	*x = SetDriveBaiduNetDiskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveBaiduNetDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveBaiduNetDiskRequest) ProtoMessage() {}

func (x *SetDriveBaiduNetDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveBaiduNetDiskRequest.ProtoReflect.Descriptor instead.
func (*SetDriveBaiduNetDiskRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{23}
}

func (x *SetDriveBaiduNetDiskRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *SetDriveBaiduNetDiskRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *SetDriveBaiduNetDiskRequest) GetTmpDir() string {
	if x != nil {
		return x.TmpDir
	}
	return ""
}

type SetDriveBaiduNetDiskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SetDriveBaiduNetDiskResponse) Reset() {
	*x = SetDriveBaiduNetDiskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDriveBaiduNetDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDriveBaiduNetDiskResponse) ProtoMessage() {}

func (x *SetDriveBaiduNetDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDriveBaiduNetDiskResponse.ProtoReflect.Descriptor instead.
func (*SetDriveBaiduNetDiskResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{24}
}

func (x *SetDriveBaiduNetDiskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDriveBaiduNetDiskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartBaiduNetdiskLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TmpDir string `protobuf:"bytes,1,opt,name=tmpDir,proto3" json:"tmpDir,omitempty"`
}

func (x *StartBaiduNetdiskLoginRequest) Reset() {
	*x = StartBaiduNetdiskLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBaiduNetdiskLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBaiduNetdiskLoginRequest) ProtoMessage() {}

func (x *StartBaiduNetdiskLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBaiduNetdiskLoginRequest.ProtoReflect.Descriptor instead.
func (*StartBaiduNetdiskLoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{25}
}

func (x *StartBaiduNetdiskLoginRequest) GetTmpDir() string {
	if x != nil {
		return x.TmpDir
	}
	return ""
}

type StartBaiduNetdiskLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AccessToken  string `protobuf:"bytes,4,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	ExiresAt     int64  `protobuf:"varint,5,opt,name=exiresAt,proto3" json:"exiresAt,omitempty"`
}

func (x *StartBaiduNetdiskLoginResponse) Reset() {
	*x = StartBaiduNetdiskLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_img_syncer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBaiduNetdiskLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBaiduNetdiskLoginResponse) ProtoMessage() {}

func (x *StartBaiduNetdiskLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_img_syncer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBaiduNetdiskLoginResponse.ProtoReflect.Descriptor instead.
func (*StartBaiduNetdiskLoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_img_syncer_proto_rawDescGZIP(), []int{26}
}

func (x *StartBaiduNetdiskLoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartBaiduNetdiskLoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartBaiduNetdiskLoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *StartBaiduNetdiskLoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *StartBaiduNetdiskLoginResponse) GetExiresAt() int64 {
	if x != nil {
		return x.ExiresAt
	}
	return 0
}

var File_proto_img_syncer_proto protoreflect.FileDescriptor

var file_proto_img_syncer_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x44, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x56, 0x0a, 0x1c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x18, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x65, 0x64, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x65, 0x64, 0x49, 0x44, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x8a,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x40, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x44, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22,
	0x61, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69,
	0x72, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d,
	0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x4e, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x22, 0x4c, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64,
	0x61, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61,
	0x76, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0x64, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76,
	0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x69, 0x72, 0x73, 0x22, 0x3c, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e,
	0x46, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0x61, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x1b, 0x53,
	0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x22, 0x52, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x1d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x64, 0x69, 0x73,
	0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6d, 0x70, 0x44, 0x69, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x64, 0x69, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x32, 0xcf,
	0x09, 0x0a, 0x09, 0x49, 0x6d, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x69, 0x6d, 0x67,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6d, 0x67, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6d, 0x67, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x53, 0x4d, 0x42, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x25,
	0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x44,
	0x69, 0x72, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42,
	0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x23, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x4d, 0x42, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76,
	0x12, 0x21, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76, 0x44, 0x69, 0x72, 0x12,
	0x25, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62, 0x64, 0x61, 0x76, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x57, 0x65, 0x62,
	0x64, 0x61, 0x76, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x12,
	0x1e, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e,
	0x46, 0x53, 0x44, 0x69, 0x72, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4e, 0x46, 0x53, 0x44,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6d, 0x67, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x4e, 0x46, 0x53, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x4e, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x27, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x42, 0x61,
	0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a,
	0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x64, 0x69,
	0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x29, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e,
	0x65, 0x74, 0x64, 0x69, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4e, 0x65, 0x74, 0x64, 0x69, 0x73,
	0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66,
	0x72, 0x65, 0x67, 0x69, 0x65, 0x2f, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_img_syncer_proto_rawDescOnce sync.Once
	file_proto_img_syncer_proto_rawDescData = file_proto_img_syncer_proto_rawDesc
)

func file_proto_img_syncer_proto_rawDescGZIP() []byte {
	file_proto_img_syncer_proto_rawDescOnce.Do(func() {
		file_proto_img_syncer_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_img_syncer_proto_rawDescData)
	})
	return file_proto_img_syncer_proto_rawDescData
}

var file_proto_img_syncer_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_img_syncer_proto_goTypes = []interface{}{
	(*ListByDateRequest)(nil),              // 0: img_syncer.ListByDateRequest
	(*ListByDateResponse)(nil),             // 1: img_syncer.ListByDateResponse
	(*DeleteRequest)(nil),                  // 2: img_syncer.DeleteRequest
	(*DeleteResponse)(nil),                 // 3: img_syncer.DeleteResponse
	(*FilterNotUploadedRequestInfo)(nil),   // 4: img_syncer.FilterNotUploadedRequestInfo
	(*FilterNotUploadedRequest)(nil),       // 5: img_syncer.FilterNotUploadedRequest
	(*FilterNotUploadedResponse)(nil),      // 6: img_syncer.FilterNotUploadedResponse
	(*SetDriveSMBRequest)(nil),             // 7: img_syncer.SetDriveSMBRequest
	(*SetDriveSMBResponse)(nil),            // 8: img_syncer.SetDriveSMBResponse
	(*ListDriveSMBSharesRequest)(nil),      // 9: img_syncer.ListDriveSMBSharesRequest
	(*ListDriveSMBSharesResponse)(nil),     // 10: img_syncer.ListDriveSMBSharesResponse
	(*ListDriveSMBDirRequest)(nil),         // 11: img_syncer.ListDriveSMBDirRequest
	(*ListDriveSMBDirResponse)(nil),        // 12: img_syncer.ListDriveSMBDirResponse
	(*SetDriveSMBShareRequest)(nil),        // 13: img_syncer.SetDriveSMBShareRequest
	(*SetDriveSMBShareResponse)(nil),       // 14: img_syncer.SetDriveSMBShareResponse
	(*SetDriveWebdavRequest)(nil),          // 15: img_syncer.SetDriveWebdavRequest
	(*SetDriveWebdavResponse)(nil),         // 16: img_syncer.SetDriveWebdavResponse
	(*ListDriveWebdavDirRequest)(nil),      // 17: img_syncer.ListDriveWebdavDirRequest
	(*ListDriveWebdavDirResponse)(nil),     // 18: img_syncer.ListDriveWebdavDirResponse
	(*SetDriveNFSRequest)(nil),             // 19: img_syncer.SetDriveNFSRequest
	(*SetDriveNFSResponse)(nil),            // 20: img_syncer.SetDriveNFSResponse
	(*ListDriveNFSDirRequest)(nil),         // 21: img_syncer.ListDriveNFSDirRequest
	(*ListDriveNFSDirResponse)(nil),        // 22: img_syncer.ListDriveNFSDirResponse
	(*SetDriveBaiduNetDiskRequest)(nil),    // 23: img_syncer.SetDriveBaiduNetDiskRequest
	(*SetDriveBaiduNetDiskResponse)(nil),   // 24: img_syncer.SetDriveBaiduNetDiskResponse
	(*StartBaiduNetdiskLoginRequest)(nil),  // 25: img_syncer.StartBaiduNetdiskLoginRequest
	(*StartBaiduNetdiskLoginResponse)(nil), // 26: img_syncer.StartBaiduNetdiskLoginResponse
}
var file_proto_img_syncer_proto_depIdxs = []int32{
	4,  // 0: img_syncer.FilterNotUploadedRequest.photos:type_name -> img_syncer.FilterNotUploadedRequestInfo
	0,  // 1: img_syncer.ImgSyncer.ListByDate:input_type -> img_syncer.ListByDateRequest
	2,  // 2: img_syncer.ImgSyncer.Delete:input_type -> img_syncer.DeleteRequest
	5,  // 3: img_syncer.ImgSyncer.FilterNotUploaded:input_type -> img_syncer.FilterNotUploadedRequest
	7,  // 4: img_syncer.ImgSyncer.SetDriveSMB:input_type -> img_syncer.SetDriveSMBRequest
	9,  // 5: img_syncer.ImgSyncer.ListDriveSMBShares:input_type -> img_syncer.ListDriveSMBSharesRequest
	11, // 6: img_syncer.ImgSyncer.ListDriveSMBDir:input_type -> img_syncer.ListDriveSMBDirRequest
	13, // 7: img_syncer.ImgSyncer.SetDriveSMBShare:input_type -> img_syncer.SetDriveSMBShareRequest
	15, // 8: img_syncer.ImgSyncer.SetDriveWebdav:input_type -> img_syncer.SetDriveWebdavRequest
	17, // 9: img_syncer.ImgSyncer.ListDriveWebdavDir:input_type -> img_syncer.ListDriveWebdavDirRequest
	19, // 10: img_syncer.ImgSyncer.SetDriveNFS:input_type -> img_syncer.SetDriveNFSRequest
	21, // 11: img_syncer.ImgSyncer.ListDriveNFSDir:input_type -> img_syncer.ListDriveNFSDirRequest
	23, // 12: img_syncer.ImgSyncer.SetDriveBaiduNetDisk:input_type -> img_syncer.SetDriveBaiduNetDiskRequest
	25, // 13: img_syncer.ImgSyncer.StartBaiduNetdiskLogin:input_type -> img_syncer.StartBaiduNetdiskLoginRequest
	1,  // 14: img_syncer.ImgSyncer.ListByDate:output_type -> img_syncer.ListByDateResponse
	3,  // 15: img_syncer.ImgSyncer.Delete:output_type -> img_syncer.DeleteResponse
	6,  // 16: img_syncer.ImgSyncer.FilterNotUploaded:output_type -> img_syncer.FilterNotUploadedResponse
	8,  // 17: img_syncer.ImgSyncer.SetDriveSMB:output_type -> img_syncer.SetDriveSMBResponse
	10, // 18: img_syncer.ImgSyncer.ListDriveSMBShares:output_type -> img_syncer.ListDriveSMBSharesResponse
	12, // 19: img_syncer.ImgSyncer.ListDriveSMBDir:output_type -> img_syncer.ListDriveSMBDirResponse
	14, // 20: img_syncer.ImgSyncer.SetDriveSMBShare:output_type -> img_syncer.SetDriveSMBShareResponse
	16, // 21: img_syncer.ImgSyncer.SetDriveWebdav:output_type -> img_syncer.SetDriveWebdavResponse
	18, // 22: img_syncer.ImgSyncer.ListDriveWebdavDir:output_type -> img_syncer.ListDriveWebdavDirResponse
	20, // 23: img_syncer.ImgSyncer.SetDriveNFS:output_type -> img_syncer.SetDriveNFSResponse
	22, // 24: img_syncer.ImgSyncer.ListDriveNFSDir:output_type -> img_syncer.ListDriveNFSDirResponse
	24, // 25: img_syncer.ImgSyncer.SetDriveBaiduNetDisk:output_type -> img_syncer.SetDriveBaiduNetDiskResponse
	26, // 26: img_syncer.ImgSyncer.StartBaiduNetdiskLogin:output_type -> img_syncer.StartBaiduNetdiskLoginResponse
	14, // [14:27] is the sub-list for method output_type
	1,  // [1:14] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_img_syncer_proto_init() }
func file_proto_img_syncer_proto_init() {
	if File_proto_img_syncer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_img_syncer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterNotUploadedRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterNotUploadedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterNotUploadedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveSMBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveSMBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveSMBSharesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveSMBSharesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveSMBDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveSMBDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveSMBShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveSMBShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveWebdavRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveWebdavResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveWebdavDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveWebdavDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveNFSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveNFSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveNFSDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDriveNFSDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveBaiduNetDiskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDriveBaiduNetDiskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBaiduNetdiskLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_img_syncer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBaiduNetdiskLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_img_syncer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_img_syncer_proto_goTypes,
		DependencyIndexes: file_proto_img_syncer_proto_depIdxs,
		MessageInfos:      file_proto_img_syncer_proto_msgTypes,
	}.Build()
	File_proto_img_syncer_proto = out.File
	file_proto_img_syncer_proto_rawDesc = nil
	file_proto_img_syncer_proto_goTypes = nil
	file_proto_img_syncer_proto_depIdxs = nil
}
